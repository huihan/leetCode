public class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(obstacleGrid == null) return 0;
        if(obstacleGrid.length < 1) return 0;
        if(obstacleGrid[0].length <1) return 0;
        return uniquePathsWithObstacles_DP(obstacleGrid , 0 , 0);
    }
    
    private int uniquePathsWithObstacles_DP(int [][] arr , int row ,int col)
    {
        if(arr[row][col] ==1) return 0;
        if(row == arr.length -1 && col == arr[0].length -1)
        {
            return 1;
        }
        if(row == arr.length -1)
        {
            return uniquePathsWithObstacles_DP(arr , row , col+1);
        }
        else
        if(col == arr[0].length -1)
        {
            return uniquePathsWithObstacles_DP(arr , row +1 , col );
        }
        return  uniquePathsWithObstacles_DP(arr , row +1, col)+
                uniquePathsWithObstacles_DP(arr , row , col+1);
    }
}
