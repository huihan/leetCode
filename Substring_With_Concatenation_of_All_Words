import java.util.Hashtable;
public class Solution {
    public ArrayList<Integer> findSubstring(String S, String[] L) {
        // Start typing your Java solution below
        // DO NOT write main() function
        ArrayList<Integer> res = new ArrayList<Integer>();
        if(L.length == 0||S.length() == 0) return res; 
        Hashtable<String,Integer> ht = new Hashtable<String,Integer>();
        
        int len = L[0].length();
        int[] len_list = new int[L.length];
        for(int i = 0 ; i < L.length ; i++)
        {
            ht.put(L[i],-1);
        }
        for(int i = 0 ; i <= S.length() - L.length * len ; i++)
        {
            int j;
            for(j = 0 ; j < L.length ; j++)
            { 
                String str =S.substring(i +j*len ,i+len+ j*len );
                if(!ht.containsKey(str))
                {
                     break;
                }
                if(ht.get(str) == i) break;
                ht.put(str,i);
            }
            if(j == L.length) 
                res.add(i);
        } 
        return res;
    }
}
