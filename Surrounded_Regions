
import java.lang.String;
import java.util.Arrays;
import java.util.ArrayList;

public class Solution {  
    int m,n;
    char[][] board;

    public void solve(char[][] board){
        if(board == null || board.length == 0) return;
        this.board = board;
        m = board.length;
        n=board[0].length;

        for(int i = 0 ; i < n ; i++)
        {
            dfs(0,i);
            dfs(m-1,i);
        }
        for(int i = 0 ; i < m ; i++)
        {
            dfs(i,0);
            dfs(i,n-1);
        }
        for(int i = 0 ; i < m ; i++)
            for(int j = 0 ; i < n ; j++)
            {
                if(this.board[i][j] == 'O')
                    board[i][j] = 'X';
                else if(this.board[i][j] == 'D')
                    board[i][j] = 'O';
            }
    }
        void dfs(int x, int y)
    {
        if(x < 0 || y < 0 || x >= m || y >=n || board[x][y] !='O') return;
        dfs(x-1,y);
        dfs(x+1,y);
        dfs(x,y-1);
        dfs(x,y+1);
    }

}
