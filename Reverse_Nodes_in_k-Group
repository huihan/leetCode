/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode reverseKGroup(ListNode head, int k) {
        // Start typing your Java solution below
        // DO NOT write main() function
        if(k <=1) return head; 
        ListNode tail = head;
        if(tail == null) return tail;
        ListNode fore = head;
        ListNode fore2 = head.next;
        if(fore2 == null) return head;
        ListNode fore3 = fore2.next;
        for(int i = 0 ; i < k-1 ; i++)
        { 
            tail = tail.next; 
            if(tail == null) return head;
        }
        ListNode newhead = tail.next;
        for(int i = 0 ; i < k ; i++)
        { 
            fore2.next = fore;
            if(fore2 == tail) break;
            fore = fore2;
            fore2 = fore3 ;
            fore3 = fore3.next;
            
        }
        head.next = reverseKGroup(  newhead,   k);
        return tail;
    }
}
